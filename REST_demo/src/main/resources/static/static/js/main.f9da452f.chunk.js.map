{"version":3,"sources":["logo.svg","services/auth/authTypes.js","components/BackendURL.js","services/auth/authActions.js","components/NavigationBar.js","components/Welcome.js","components/Footer.js","components/users/Profile.js","components/books/AddBook.js","components/books/BookList.js","components/users/Login.js","components/users/EditUser.js","components/users/Registration.js","App.js","reportWebVitals.js","services/auth/authReducer.js","services/rootReducer.js","services/store.js","index.js"],"names":["SUCCESS","FAILTURE","ADD_USERNAME","RELOAD_BOOK_LIST_ON","RELOAD_BOOK_LIST_OFF","LIBRARY","PROFILE","checkCredentials","username","password","a","user","axios","post","data","authStatus","addUsername","type","payload","success","isLoggedIn","failture","NavigationBar","logout","props","logoutUser","guestLinks","className","Nav","to","icon","faSignInAlt","userLinks","onClick","this","Navbar","bg","variant","src","logo","width","height","alt","auth","Component","connect","state","dispatch","Welcome","Jumbotron","Footer","fixed","Container","Col","lg","Profile","initialState","avatarImageURL","firstName","lastName","email","age","findUserByUsername","get","then","response","setState","id","catch","error","console","Card","Header","Image","roundedCircle","faUser","faEdit","Body","Table","align","colSpan","AddBook","title","author","readingYear","bookType","coverImageURL","resetBook","findBookById","bookId","updateBook","event","preventDefault","book","put","submitBook","reloadBookOn","radioChange","target","value","radioChecked","bookChange","name","bind","match","params","faSave","Form","onReset","onSubmit","Row","Group","as","controlId","Label","Control","required","autoComplete","onChange","placeholder","InputGroup","Append","Radio","checked","Text","FormControl","hidden","style","Button","size","mapDispatchToProps","BookList","deleteBook","delete","books","filter","isFetching","findAllBooks","prevProps","isReload","reloadBookOff","sort","prev","next","faList","length","map","ButtonGroup","faTrash","color","reloadBook","Login","credentialChange","validateUser","authenticateUser","history","push","resetLoginForm","xs","Alert","Prepend","faLock","disabled","faUndo","checkedUsername","EditUser","findUserById","userId","userChange","submitUser","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","action","rootReducer","combineReducers","authReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f9da452f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.90c643f7.svg\";","export const SUCCESS = \"SUCCESS\";\nexport const FAILTURE = \"FAILTURE\";\nexport const ADD_USERNAME = \"ADD_USERNAME\";\n\n\nexport const RELOAD_BOOK_LIST_ON = \"RELOAD_BOOK_LIST_ON\";\nexport const RELOAD_BOOK_LIST_OFF = \"RELOAD_BOOK_LIST_OFF\";","export const LIBRARY = \"http://localhost:8080/rest/library\";\nexport const PROFILE = \"http://localhost:8080/rest/profile\";\n\n","import {SUCCESS, FAILTURE, ADD_USERNAME, RELOAD_BOOK_LIST_ON, RELOAD_BOOK_LIST_OFF} from './authTypes';\nimport axios from 'axios';\nimport { PROFILE } from '../../components/BackendURL';\n\nasync function checkCredentials(username, password) {\n\n    const user = {\n        \"username\" : username,\n        \"password\" : password\n    }\n\n    const response = await axios.post(PROFILE + \"/auth\", user)\n\n        if(response.data.authStatus === \"OK\") {\n            \n            return username;   \n        }\n        else return false;\n}\n\nexport const addUsername = username => {\n\n    return {\n        type: ADD_USERNAME,\n        payload: username\n    }\n}\n\nexport const reloadBookOn = () => {\n    return{\n        type: RELOAD_BOOK_LIST_ON\n    }\n}\n\nexport const reloadBookOff = () => {\n\n    return{\n        type: RELOAD_BOOK_LIST_OFF\n    }\n}\n\nexport const authenticateUser = (username, password) => {\n    return async dispatch => {\n\n        const checkedUsername = await checkCredentials(username, password);\n        \n        if(checkedUsername){   \n            dispatch(addUsername(checkedUsername));\n            dispatch(success(true));\n        }\n        else{\n            dispatch(failture());\n        }\n    }\n}\n\nexport const logoutUser = () => {\n    return dispatch => {\n        dispatch(success(false));\n    }\n}\n\nconst success = isLoggedIn => {\n    return {\n        type: SUCCESS,\n        payload: isLoggedIn\n    }\n}\n\nconst failture = () => {\n    return {\n        type: FAILTURE,\n        payload: false\n    }\n}","import React, { Component } from 'react';\nimport logo from '../logo.svg';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSignInAlt, faUserPlus } from '@fortawesome/free-solid-svg-icons';\nimport { connect } from 'react-redux';\nimport {logoutUser} from '../services/index';\n\nclass NavigationBar extends Component {\n    logout = () => {\n        this.props.logoutUser();\n    }\n    \n    render () {\n\n        const guestLinks = (\n            <>\n                <div className=\"mr-auto\"></div>\n                <Nav className=\"navbar-right\">\n                    {/* <Link to=\"/registration\" className=\"nav-link\"><FontAwesomeIcon icon={faUserPlus}/> Регистрация</Link> */}\n                    <Link to=\"/login\" className=\"nav-link\"><FontAwesomeIcon icon={faSignInAlt}/> Вход</Link>\n                </Nav>\n            </>\n        );\n        const userLinks = (\n            <>\n                <Nav className=\"mr-auto\">\n                    {/* <Link to={\"\"} className=\"nav-link\">Главная</Link> */}\n                    <Link to={\"/library\"}  className=\"nav-link\">Список книг</Link>\n                    <Link to={\"/profile\"}  className=\"nav-link\">Личный кабинет</Link>\n                </Nav>\n                <Nav className=\"navbar-right\">\n                    <Link to=\"/logout\" onClick={this.logout} className=\"nav-link\"><FontAwesomeIcon icon={faSignInAlt}/> Выход</Link>\n                </Nav>  \n            </>\n        );\n\n    return(\n        <Navbar bg=\"light\" variant=\"light\">\n            <Link to={\"\"} className=\"navbar-brand\">\n                <img src={logo} width=\"75\" height=\"75\" alt=\"brand\"/>Библиотека\n            </Link>\n\n            {this.props.auth.isLoggedIn ? userLinks : guestLinks}\n        </Navbar>\n    )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        auth: state.auth\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        logoutUser: () => dispatch(logoutUser())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (NavigationBar)","import React from 'react';\nimport {Jumbotron} from 'react-bootstrap';\n\nfunction Welcome() {\n    return (\n        <Jumbotron>\n                <h1>Тестовое задание</h1>\n                <p>\n                    Бражко Анатолий Михайлович\n                </p>\n        </Jumbotron>\n    )\n}\n\nexport default Welcome","import React from 'react';\nimport { Navbar, Container, Col} from 'react-bootstrap';\n\n\nfunction Footer() {\n    return (\n    <Navbar fixed=\"bottom\" bg=\"light\" variant=\"light\">\n        <Container>\n              <Col lg={12} className=\"text-center text-muted\">\n                <div>R-Style Softlab / 2020</div>\n              </Col>\n      </Container>\n    </Navbar>\n    )\n}\n\nexport default Footer\n","import React from 'react';\nimport axios from 'axios';\nimport { Component } from 'react';\nimport { Card, Image, Table } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faUser } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nimport {PROFILE} from '../BackendURL'\nimport { connect } from 'react-redux';\n\nclass Profile extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = this.initialState;\n    }\n    \n    initialState = {\n        username: \"\", password: \"\", avatarImageURL: \"\", firstName: \"\", lastName: \"\", email: \"\", age: \"\"\n    }\n\n    componentDidMount() {\n        const username = this.props.auth.username;\n        if(username) {\n        this.findUserByUsername(username);\n        }\n    }\n\n    findUserByUsername = (username) => {\n        axios.get(PROFILE + \"/username/\" + username)\n        .then(response => {\n            if(response.data != null) {\n                this.setState({\n                    id: response.data.id,\n                    username: response.data.username,\n                    password: response.data.password,\n                    avatarImageURL: response.data.avatarImageURL,\n                    firstName: response.data.firstName,\n                    lastName: response.data.lastName,\n                    email: response.data.email,\n                    age: response.data.age\n                })\n            }\n\n        }).catch((error) => {\n            console.error(\"ERROR \" + error)\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Card>\n                    <Card.Header> \n                    <Image src={this.state.avatarImageURL} roundedCircle width=\"256\" height=\"256\"/> \n                    <FontAwesomeIcon icon={faUser}/> <b>{this.state.username}</b>\n                    <div>\n                    <Link to={\"/profile/edit/\" + this.state.id} className=\"btn btn-sm btn-primary\"><FontAwesomeIcon icon={faEdit}/> Изменить данные</Link>\n                    </div>  \n                    </Card.Header>\n                    \n                    <Card.Body>\n\n                    </Card.Body>\n                        <Table>\n                            <thead>\n                                <tr align=\"center\">\n                                    <td colSpan=\"2\"><b>Данные профиля: </b></td>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>Имя:</td>\n                                    <td>{this.state.firstName}</td>\n                                </tr>\n                                <tr>\n                                    <td>Фамилия:</td>\n                                    <td>{this.state.lastName}</td>\n                                </tr>\n                                <tr>\n                                    <td>Электронная почта:</td>\n                                    <td>{this.state.email}</td>\n                                </tr>\n                                <tr>\n                                    <td>Возраст:</td>\n                                    <td>{this.state.age}</td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    <Card.Footer>\n                        \n                    </Card.Footer>\n                </Card>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        auth: state.auth\n    }\n  }\n\nexport default connect(mapStateToProps) (Profile)","import React, {Component} from 'react';\nimport { Card, Form, Button, Col, FormControl, InputGroup } from 'react-bootstrap';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport {LIBRARY} from '../BackendURL'\nimport { connect } from 'react-redux';\nimport {reloadBookOn} from '../../services/auth/authActions';\n\n\nclass AddBook extends Component {\n  \n    constructor(props) {\n        super(props);\n        this.state = this.initialState;\n        this.bookChange = this.bookChange.bind(this);\n        this.submitBook = this.submitBook.bind(this);\n    }\n\n    initialState = {\n        title: \"\", author: \"\", readingYear: \"\", bookType: \"\", coverImageURL: \"\"\n    }\n\n    resetBook = () => {\n        this.setState(() => this.initialState);\n    }\n\n    componentDidMount() {\n        try {\n            const bookId = +this.props.match.params.id;\n            if (bookId) {\n                this.findBookById(bookId);\n            }\n        }\n        catch {}\n        \n    }\n\n    findBookById = (bookId) => {\n        axios.get(LIBRARY + \"/\" + bookId)\n        .then(response => {\n            if(response.data != null) {\n                this.setState({\n                    id: response.data.id,\n                    title: response.data.title,\n                    author: response.data.author,\n                    readingYear: response.data.readingYear,\n                    bookType: response.data.bookType,\n                    coverImageURL: response.data.coverImageURL\n                })\n            }\n\n        }).catch((error) => {\n            console.error(\"ERROR\" + error)\n        })\n    }\n\n    updateBook = event => {\n        event.preventDefault();\n\n        const book = {\n            id: this.state.id,\n            title: this.state.title,\n            author: this.state.author,\n            readingYear: this.state.readingYear,\n            bookType: this.state.bookType,\n            coverImageURL: this.state.coverImageURL\n        }\n\n        axios.put(LIBRARY, book)\n            .then(response => {\n                if(response.data != null) {\n                    this.setState(this.initialState)\n                }\n            })\n    }\n\n    submitBook = event => {\n        event.preventDefault();\n\n        const book = {\n            title: this.state.title,\n            author: this.state.author,\n            readingYear: this.state.readingYear,\n            bookType: this.state.bookType,\n            coverImageURL: this.state.coverImageURL\n        };\n\n        axios.post(LIBRARY, book)\n            .then(response => {\n                if(response.data != null) {\n                    this.setState(this.initialState)\n                    this.props.reloadBookOn();\n                }\n            })\n    }\n\n    radioChange = event => {\n        this.setState({...this.state, bookType : event.target.value});\n    }\n\n    radioChecked = value => {\n\n        return value === this.state.bookType;\n    }\n\n    bookChange = event => {\n        this.setState({\n            [event.target.name] : event.target.value\n        });\n    }\n\n    render() {\n\n        const {title, author, readingYear, bookType, coverImageURL} = this.state;\n\n    return (\n        <div>\n        <Card className=\"\">\n            <Card.Header><FontAwesomeIcon icon={faSave}/> {this.state.id ? \"Обновить книгу\" : \"Добавить книгу\"}</Card.Header>\n            <Form onReset={this.resetBook} onSubmit={this.state.id ? this.updateBook : this.submitBook} id=\"bookForm\">\n                <Card.Body>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridTitle\">\n                            <Form.Label>Название</Form.Label>\n                            <Form.Control required\n                            type=\"text\" name=\"title\" autoComplete=\"off\"\n                            value={title}\n                            onChange={this.bookChange}\n                            placeholder=\"Введите название книги\" />\n                        </Form.Group>\n                        <Form.Group as={Col} controlId=\"formGridAuthor\">\n                            <Form.Label>Автор</Form.Label>\n                            <Form.Control required autoComplete=\"off\"\n                            type=\"text\" name=\"author\"\n                            value={author}\n                            onChange={this.bookChange}\n                            placeholder=\"Введите автора книги\" />\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridReadingYear\">\n                            <Form.Label>Год прочтения</Form.Label>\n                            <Form.Control required autoComplete=\"off\"\n                            type=\"number\" name=\"readingYear\"\n                            value={readingYear}\n                            onChange={this.bookChange}\n                            placeholder=\"Введите год прочтения\" />\n                        </Form.Group>\n                        <Form.Group as={Col} controlId=\"formGridBookType\">\n                            <Form.Label>Тип книги</Form.Label>\n                                <InputGroup.Append >\n                                        <InputGroup.Radio checked={this.radioChecked(\"PAPER\")} onChange={this.radioChange} name=\"radio\" value=\"PAPER\" />\n                                        <InputGroup.Text>Бумажная</InputGroup.Text>\n                                </InputGroup.Append>\n                                <InputGroup.Append >\n                                        <InputGroup.Radio checked={this.radioChecked(\"AUDIO\")} onChange={this.radioChange} name=\"radio\" value=\"AUDIO\" />\n                                        <InputGroup.Text>Аудио</InputGroup.Text>\n                                </InputGroup.Append>\n                                <InputGroup.Append >\n                                        <InputGroup.Radio checked={this.radioChecked(\"DIGITAL\")} onChange={this.radioChange} name=\"radio\" value=\"DIGITAL\" />\n                                        <InputGroup.Text>Электронная</InputGroup.Text>\n                                </InputGroup.Append>\n                                    \n                                <FormControl\n                                    required hidden\n                                    type=\"text\" name=\"bookType\" \n                                    value={bookType}\n                                    onChange={this.bookChange} />\n                                </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridCoverImageURL\">\n                            <Form.Label>Изображение обложки</Form.Label>\n                            <Form.Control required autoComplete=\"off\"\n                            type=\"text\" name=\"coverImageURL\" \n                            value={coverImageURL}\n                            onChange={this.bookChange}\n                            placeholder=\"URL\" />\n                        </Form.Group>\n                    </Form.Row>\n                    \n                </Card.Body>\n                <Card.Footer style={{\"textAlign\":\"right\"}}>\n                    \n                    <Button size=\"sm\" variant=\"info\" type=\"reset\">Очистить</Button>\n                    <Button size=\"sm\" variant=\"primary\" type=\"submit\"> {this.state.id ? \"Обновить\" : \"Добавить\"}</Button>\n                </Card.Footer>\n            </Form>\n        </Card>\n        </div>\n    )\n    }\n}\n\nconst mapDispatchToProps = {\n    \n        reloadBookOn\n}\n\n\nexport default connect(null, mapDispatchToProps) (AddBook)","import React, {Component} from 'react';\nimport { Card, Table, Image, ButtonGroup, Button} from 'react-bootstrap';\nimport AddBook from './AddBook';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faList, faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nimport {LIBRARY} from '../BackendURL'\nimport Loader from 'react-loader-spinner'\nimport { connect } from 'react-redux';\nimport {reloadBookOff} from '../../services/auth/authActions';\n\n\nclass BookList extends Component {\n  \n    constructor(props) {\n        super(props);\n        this.state = {\n            books : [],\n            isFetching: false\n        };\n    }\n\n    componentDidMount() {\n        this.findAllBooks();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.isReload !== prevProps.isReload) {\n            this.props.reloadBookOff();\n            this.findAllBooks();\n\n        }\n      }\n\n    findAllBooks() {\n        axios.get(LIBRARY)\n        .then(response => response.data)\n        .then((data) => {\n            this.setState({books: data.sort( (prev, next) => prev.readingYear - next.readingYear)})\n            this.setState({isFetching: true})\n        });\n    }\n\n    deleteBook = (bookId) => {\n        axios.delete(LIBRARY + \"/\" + bookId)\n        .then(response => {\n            if(response.data != null) {\n                this.setState({\n                    books: this.state.books.filter(book => book.id !== bookId)\n                })\n            }\n        });\n    }\n\n    render() {\n    return (\n        <div>\n        <AddBook/>\n        <Card className=\"\">\n            <Card.Header><FontAwesomeIcon icon={faList}/> Список книг</Card.Header>\n                <Card.Body>\n                    <Table>\n                        <thead>\n                            <tr>\n                            <th>#</th>\n                            <th>Название</th>\n                            <th>Автор</th>\n                            <th>Год прочтения</th>\n                            <th>Тип книги</th>\n                            <th>Действия</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.state.isFetching ?\n                            this.state.books.length === 0 ?\n                                <tr align=\"center\">\n                                    <td colSpan=\"5\">\n                                        В вашей библиотеке нет книг\n                                    </td>\n                                </tr>\n                                 :\n                                this.state.books.map((book) => (\n                                    <tr key={book.id}>\n                                        <td>{book.id}</td>\n                                        <td>\n                                            <Image src={book.coverImageURL} roundedCircle width=\"32\" height=\"32\"/>\n                                            {book.title}</td>\n                                        <td>{book.author}</td>\n                                        <td>{book.readingYear}</td>\n                                        {\n                                            book.bookType === \"PAPER\" ?\n                                            <td>Бумажная</td> :\n                                            book.bookType === \"AUDIO\" ?\n                                            <td>Аудио</td> :\n                                            book.bookType === \"DIGITAL\" ?\n                                            <td>Электронная</td> :\n                                            <td>{book.bookType}</td>                                        \n                                        }\n                                        <td>\n                                            <ButtonGroup>\n                                                <Link to={\"library/edit/\" + book.id} className=\"btn btn-sm btn-primary\"><FontAwesomeIcon icon={faEdit}/></Link>\n                                                <Button variant=\"danger\" onClick={this.deleteBook.bind(this, book.id)}>\n                                                    <FontAwesomeIcon icon={faTrash}/>\n                                                </Button>\n                                            </ButtonGroup>\n                                        </td>\n                                    </tr>\n                                ))\n                                :\n                                <tr align=\"center\">\n                                    <td colSpan=\"5\">\n                                    <Loader\n                                        type=\"ThreeDots\"\n                                        color=\"#00BFFF\"\n                                        height={100}\n                                        width={100}\n                                    />\n                                    </td>\n                                </tr>\n                            }\n                        </tbody>\n                    </Table>\n            </Card.Body>\n        </Card>\n        </div>\n    )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isReload: state.auth.reloadBook\n    }\n  }\n\n  const mapDispatchToProps = {\n    \n        reloadBookOff\n    \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (BookList)","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { Alert, Button, Card, Col, Form, FormControl, InputGroup, Row } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock, faSignInAlt, faUndo, faUser } from '@fortawesome/free-solid-svg-icons';\nimport {authenticateUser} from '../../services/index';\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = this.initialState;\n    }\n\n    initialState = {\n        username: '',\n        password: '',\n        error: ''\n    }\n\n    credentialChange = event => {\n        this.setState({\n            [event.target.name] : event.target.value\n        });\n    }\n\n    validateUser = async() => {\n        await this.props.authenticateUser(this.state.username, this.state.password)\n   \n        if(this.props.auth.isLoggedIn) {\n            return this.props.history.push(\"/\");\n        }\n        else {\n            this.resetLoginForm();\n            this.setState({\"error\":\"Имя пользователя или пароль введены неверно\"})\n        }\n        \n    }\n\n    resetLoginForm = () => {\n        this.setState(() => this.initialState);\n    }\n\n    render() {\n\n        const {username, password, error} = this.state;\n\n        return (\n            <Row className=\"justify-content-md-center\">\n                <Col xs={5}>\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    <Card>\n                        <Card.Header><FontAwesomeIcon icon={faSignInAlt}/> Войти</Card.Header>\n                        <Card.Body>\n                            <Form.Row>\n                                <Form.Group as={Col}>\n                                    <InputGroup>\n                                        <InputGroup.Prepend>\n                                            <InputGroup.Text><FontAwesomeIcon icon={faUser}/></InputGroup.Text>\n                                            <FormControl required autoComplete=\"off\" onChange={this.credentialChange} name=\"username\" value={username} type=\"text\" placeholder=\"Логин\"/>\n                                        </InputGroup.Prepend>\n                                    </InputGroup>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col}>\n                                    <InputGroup>\n                                        <InputGroup.Prepend>\n                                            <InputGroup.Text><FontAwesomeIcon icon={faLock}/></InputGroup.Text>\n                                            <FormControl required autoComplete=\"off\" onChange={this.credentialChange} name=\"password\" value={password} type=\"password\" placeholder=\"Пароль\"/>\n                                        </InputGroup.Prepend>\n                                    </InputGroup>\n                                </Form.Group>\n                            </Form.Row>\n                        </Card.Body>\n                        <Card.Footer style={{\"textAlign\":\"right\"}}>\n                            <Button size=\"sm\" type=\"button\" variant=\"info\" onClick={this.resetLoginForm}\n                                disabled={this.state.username.length === 0 && this.state.password.length === 0 && this.state.password.error === 0}\n                                >\n                                <FontAwesomeIcon icon={faUndo}/> Очистить\n                            </Button>\n                            <Button size=\"sm\" type=\"button\" variant=\"primary\" onClick={this.validateUser}\n                                disabled={this.state.username.length === 0 || this.state.password.length === 0}\n                                >\n                                <FontAwesomeIcon icon={faSignInAlt}/> Войти\n                            </Button>\n                        </Card.Footer>\n                    </Card>\n                </Col>\n            </Row>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        auth: state.auth\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        authenticateUser: (username, password) => dispatch(authenticateUser(username, password))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Login)","import { faEdit, faUndo } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { Button, Card, Col, Form } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport {PROFILE} from '../BackendURL'\n\nclass EditUser extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = this.initialState;\n        this.userChange = this.userChange.bind(this);\n        this.submitUser = this.submitUser.bind(this);\n    }\n\n    findUserById = (userId) => {\n        axios.get(PROFILE + \"/\" + userId)\n        .then(response => {\n            if(response.data != null) {\n                this.setState({\n                    id: response.data.id,\n                    username: response.data.username,\n                    password: response.data.password,\n                    avatarImageURL: response.data.avatarImageURL,\n                    firstName: response.data.firstName,\n                    lastName: response.data.lastName,\n                    email: response.data.email,\n                    age: response.data.age\n                })\n            }\n\n        }).catch((error) => {\n            console.error(\"ERROR \" + error)\n        })\n    }\n\n    componentDidMount() {\n            const userId = +this.props.match.params.id;\n            if (userId) {\n                this.findUserById(userId);\n            }\n        \n    }\n\n    userChange = event => {\n\n        this.setState({\n            [event.target.name] : event.target.value\n        });\n\n    }\n\n    submitUser = event => {\n        event.preventDefault();\n\n        const user = {\n            id: this.state.id,\n            username: this.state.username,\n            password: this.state.password,\n            avatarImageURL: this.state.avatarImageURL,\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            email: this.state.email,\n            age: this.state.age\n        }\n\n        axios.put(PROFILE, user)\n        .then(response => {\n            if(response.data != null) {\n                this.setState(this.initialState)\n            }\n        })\n\n    }\n\n    initialState = {\n        username: \"\", password: \"\", avatarImageURL: \"\", firstName: \"\", lastName: \"\", email: \"\", age: \"\"\n    }\n\n    render () {\n\n        const {firstName, lastName, avatarImageURL, email, age} = this.state;\n\n        return (\n            <div>\n                <Card>\n                    <Card.Header></Card.Header>\n\n                    <Form onSubmit={this.submitUser} id=\"userForm\">\n\n                    <Card.Body>\n\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridFirstName\">\n                            <Form.Label>Имя: </Form.Label>\n                            <Form.Control required\n                            type=\"text\" name=\"firstName\" autoComplete=\"off\"\n                            value={firstName}\n                            onChange={this.userChange}\n                            placeholder=\"Введите имя пользователя\" />\n                        </Form.Group>\n                        <Form.Group as={Col} controlId=\"formGridLastName\">\n                            <Form.Label>Фамилия: </Form.Label>\n                            <Form.Control required autoComplete=\"off\"\n                            type=\"text\" name=\"lastName\"\n                            value={lastName}\n                            onChange={this.userChange}\n                            placeholder=\"Введите фамилию пользователя\" />\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridEmail\">\n                            <Form.Label>Электронная почта: </Form.Label>\n                            <Form.Control required autoComplete=\"off\"\n                            type=\"text\" name=\"email\"\n                            value={email}\n                            onChange={this.userChange}\n                            placeholder=\"Электронная почта\" />\n                        </Form.Group>\n                        <Form.Group as={Col} controlId=\"formGridAge\">\n                            <Form.Label>Возраст: </Form.Label>\n                            <Form.Control required autoComplete=\"off\"\n                            type=\"number\" name=\"age\"\n                            value={age}\n                            onChange={this.userChange}\n                            placeholder=\"Электронная почта\" />\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridAvatarImageURL\">\n                            <Form.Label>Аватар: </Form.Label>\n                            <Form.Control required autoComplete=\"off\"\n                            type=\"text\" name=\"avatarImageURL\" \n                            value={avatarImageURL}\n                            onChange={this.userChange}\n                            placeholder=\"URL\" />\n                        </Form.Group>\n                    </Form.Row>\n\n                    </Card.Body> \n                        <Card.Footer style={{\"text-align\":\"right\"}}>\n                        <Link to={\"/profile\"} className=\"btn btn-sm btn-primary\"><FontAwesomeIcon icon={faUndo}/> Отмена</Link>\n                        <Button size=\"sm\" variant=\"primary\" type=\"submit\"> <FontAwesomeIcon icon={faEdit}/> Сохранить</Button>\n                    </Card.Footer>\n                    </Form>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default EditUser","import React, { Component } from 'react';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport {} from '@fortawesome/react-fontawesome';\nimport {} from '@fortawesome/free-solid-svg-icons';\n\nclass Registration extends Component {\n\n    render() {\n        return (\n            <Row className=\"justify-content-md-center\">\n                <Col xs={5}>\n                    <Card>\n                        <Card.Header>Регистрация</Card.Header>\n                    </Card>\n                </Col>\n            </Row>\n        )\n    }\n}\n\nexport default Registration","import React, { useEffect } from 'react';\nimport './App.css';\nimport {Container, Row, Col} from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\nimport NavigationBar from './components/NavigationBar'\nimport Welcome from './components/Welcome';\nimport Footer from \"./components/Footer\";\nimport Profile from './components/users/Profile';\nimport BookList from './components/books/BookList';\nimport AddBook from './components/books/AddBook';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\n\nimport Login from './components/users/Login';\nimport Registration from './components/users/Registration';\nimport EditUser from './components/users/EditUser';\n\nfunction App({auth}) {\n\n  const path = {\n    main : \"/\",\n    login : \"/login\",\n    logout : \"/logout\",\n    registration: \"/registration\",\n    library : \"/library\",\n    edit: \"/library/edit/:id\",\n    profile : \"/profile\",\n    editUser: \"/profile/edit/:id\"\n  }\n\n  return (\n    <Router>\n      <NavigationBar/>\n      <Container>\n            <Row>\n              <Col lg={12} className={\"marginTop\"}>\n                <Switch>\n\n                  <Route path={path.library} exact component={auth.isLoggedIn ? BookList : Login}/>\n                  <Route path={path.profile} exact component={ auth.isLoggedIn ? Profile : Login}/>\n                  <Route path={path.editUser} exact component={auth.isLoggedIn ? EditUser : Login}/>\n                  <Route path={path.edit} exact component={auth.isLoggedIn ? AddBook : Login}/>\n\n\n                  <Route path={path.main} exact component={Welcome}/>\n                  <Route path={path.login} exact component={Login}/>\n                  <Route path={path.logout} exact component={Login}/>\n\n                  {/* <Route path={path.registration} exact component={Registration}/> */}\n                </Switch>\n              </Col>\n            </Row>\n      </Container>\n      <Footer/>\n    </Router>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n      auth: state.auth\n  }\n}\n\n\nexport default connect(mapStateToProps) (App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {SUCCESS, FAILTURE, ADD_USERNAME, RELOAD_BOOK_LIST_ON, RELOAD_BOOK_LIST_OFF} from './authTypes';\n\nconst initialState = {\n    isLoggedIn: false,\n    username: null,\n    reloadBook: false\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case SUCCESS:\n            return {\n                ...state,\n                isLoggedIn: action.payload\n            }\n        case FAILTURE:\n            return {\n                ...state,\n                isLoggedIn: action.payload\n            }\n        case ADD_USERNAME:\n                return {\n                    ...state,\n                    username: action.payload\n                }\n        case RELOAD_BOOK_LIST_ON:\n            return {\n                ...state,\n                reloadBook: true\n            }\n        case RELOAD_BOOK_LIST_OFF:\n            return {\n                ...state,\n                reloadBook: false\n            }        \n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import {combineReducers} from 'redux';\nimport authReducer from './auth/authReducer'\n\nconst rootReducer = combineReducers({\n    auth: authReducer\n})\n\nexport default rootReducer;","import {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './rootReducer';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {Provider} from 'react-redux';\nimport store from './services/store';\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n  <Provider store={store}><App /></Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}